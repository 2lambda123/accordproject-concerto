directive @important on OBJECT | FIELD_DEFINITION
directive @role(name: String) on OBJECT | FIELD_DEFINITION
directive @custom(string: String
boolean: Boolean
intParam: Int
floatParam: Float
type: String) on OBJECT | FIELD_DEFINITION
directive @stuff(two: Int
bool: Boolean) on OBJECT | FIELD_DEFINITION
scalar DateTime
# namespace org.acme.base
enum State {
   GOLD
   SILVER
   BRONZE
}
type Person @important @role(name: "manager") {
   stringProperty: String!
   address: UnitedStatesAddress!
   _identifier: String!
}
type Bloke @custom(string: "foo",boolean: false,intParam: 2,floatParam: 3.14,type: "SimpleAsset[]") {
   stringProperty: String! @stuff(two: 3,bool: true)
   _identifier: String!
}
type SimpleAsset {
   stringProperty: String!
   _identifier: String!
}
type AbstractAsset {
   stringProperty: String!
   _identifier: String!
}
type Address {
   street: String!
   city: String!
   country: String!
   counts: [Int]
}
type UnitedStatesAddress {
   zipcode: String!
   street: String!
   city: String!
   country: String!
   counts: [Int]
}
type BaseAsset {
   stringProperty: String!
   integerProperty: Int
   doubleProperty: Float
   booleanProperty: Boolean
   dateTimeProperty: DateTime
   longProperty: Int
   stateProperty: State
   stringArrayProperty: [String]
   integerArrayProperty: [Int]
   doubleArrayProperty: [Float]
   booleanArrayProperty: [Boolean]
   dateTimeArrayProperty: [DateTime]
   longArrayProperty: [Int]
   stateArrayProperty: [State]
   singlePerson: ID! # Person
   personArray: [ID]! # Person
   myPerson: Person
   myPeople: [Person]
   _identifier: String!
}
type DerivedAsset {
   anotherStringProperty: String!
   stringProperty: String!
   integerProperty: Int
   doubleProperty: Float
   booleanProperty: Boolean
   dateTimeProperty: DateTime
   longProperty: Int
   stateProperty: State
   stringArrayProperty: [String]
   integerArrayProperty: [Int]
   doubleArrayProperty: [Float]
   booleanArrayProperty: [Boolean]
   dateTimeArrayProperty: [DateTime]
   longArrayProperty: [Int]
   stateArrayProperty: [State]
   singlePerson: ID! # Person
   personArray: [ID]! # Person
   myPerson: Person
   myPeople: [Person]
   _identifier: String!
}
type MyBasicTransaction {
   _timestamp: DateTime!
}
type DerivedDerivedAsset {
   includedTransaction: MyBasicTransaction!
   anotherStringProperty: String!
   stringProperty: String!
   integerProperty: Int
   doubleProperty: Float
   booleanProperty: Boolean
   dateTimeProperty: DateTime
   longProperty: Int
   stateProperty: State
   stringArrayProperty: [String]
   integerArrayProperty: [Int]
   doubleArrayProperty: [Float]
   booleanArrayProperty: [Boolean]
   dateTimeArrayProperty: [DateTime]
   longArrayProperty: [Int]
   stateArrayProperty: [State]
   singlePerson: ID! # Person
   personArray: [ID]! # Person
   myPerson: Person
   myPeople: [Person]
   _identifier: String!
}
type MyTransaction {
   myAsset: BaseAsset!
   _timestamp: DateTime!
}
type MyTransactionEx {
   anotherBaseAsset: BaseAsset!
   arrayOfBaseAssets: [BaseAsset]!
   myAsset: BaseAsset!
   _timestamp: DateTime!
}
