/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace org.accordproject.kitchensink@1.0.0

concept Thing {}
participant Person {}
event Happening {}
asset Book {}

enum Color {
    o RED
    o GREEN
    o BLUE
}

scalar BooleanScalar extends Boolean
scalar IntegerScalar extends Integer
scalar LongScalar extends Long
scalar DoubleScalar extends Double
scalar StringScalar extends String
scalar DateTimeScalar extends DateTime

map MyMap {
    o String
    o String
}

concept KitchenSink {
    o String s default="test" regex=/test/ length=[1,100]
    o Double d default = 1.0 range=[0.0,10.0] optional 
    o Long l default = 1 range=[0,10]
    o Integer i default = 1 range=[0,10] optional 
    o DateTime date default = "" optional
    o Boolean b default=true optional

    o String[] sa
    o Double[] da optional 
    o Long[] la
    o Integer[] ia optional 
    o DateTime[] datea optional
    o Boolean[] ba optional

    o Thing thing
    o Thing[] things

    o Person person
    o Person[] persons

    o Happening happening
    o Happening[] happenings

    o Book book
    o Book[] books

    o BooleanScalar booleanScalar
    o BooleanScalar[] booleanScalars

    o IntegerScalar integerScalar
    o IntegerScalar[] integerScalars
    
    o LongScalar longScalar
    o LongScalar[] longScalars

    o DoubleScalar doubleScalar
    o DoubleScalar[] doubleScalars

    o StringScalar stringScalar
    o StringScalar[] stringScalars

    o DateTimeScalar dateTimeScalar
    o DateTimeScalar[] dateTimeScalars

    o MyMap myMap

    o Color color
    o Color[] colors
}